/* Светлая (по умолчанию) */
:root {
    color-scheme: light;
    --bg: #ffffff;
    --fg: #111111;
    --muted: #666666;
    --rule: #e6e6e6;
    --link: #0b57d0;
    --missing: #d00;
    --column-width: 640px;
    --gutter: 24px;
}

/* Тёмная тема */
:root[data-theme="dark"] {
    color-scheme: dark;
    --bg: #0f1117;
    --fg: #e6e8ee;
    --muted: #a0a4b3;
    --rule: #272b38;
    --link: #80a7ff;
    --missing: #ff6b6b;
}

* { box-sizing: border-box; }

html, body, #app { height: 100%; }

html.modal-open, body.modal-open { overflow: hidden; }


body {
    margin: 0;
    font: 16px/1.6 system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif;
}

a { color: var(--link); text-decoration: none; }
a:hover { text-decoration: underline; }

.column {
    width: var(--column-width);
    min-width: var(--column-width);
    max-width: var(--column-width);
    height: 100%;
    overflow: auto;
    border-left: 1px solid var(--rule);
    padding: 0 16px 40px 16px;
}
.column { position: relative; }

.column.ready.active { outline: 2px solid var(--link); outline-offset: -2px; }

.column:first-child { border-left: none; }

.header {
    position: sticky;
    top: 0;
    background: var(--bg);
    padding: 12px 0 8px;
    border-bottom: 1px solid var(--rule);
    margin-bottom: 16px;
}

.note-title {
    font-size: 22px;
    margin: 0 0 8px;
}

.meta {
    color: var(--muted);
    font-size: 13px;
}

.close-btn {
    border: 0;
    background: transparent;
    color: var(--muted);
    cursor: pointer;
    margin-left: 8px;
}

hr { border: 0; border-top: 1px solid var(--rule); margin: 24px 0; }

.wikilink.is-missing {
    color: var(--missing);
    text-decoration: underline dotted;
}
.wikilink.is-ambiguous {
    color: #cc7a00;                /* янтарный */
    text-decoration: underline dashed;
}
/* Базовая подсветка — у тебя уже, оставим: */
/* .wikilink.is-missing { color: var(--missing); } */
/* .wikilink.is-ambiguous { color: #cc7a00; border-bottom: 1px dashed currentColor; } */

/* Мини-тултип для двусмысленных ссылок */
.wikilink.is-ambiguous{
    position: relative; /* якорь для ::after/::before */
}

.wikilink.is-ambiguous:hover::after{
    content: attr(data-amb-list);
    position: absolute;
    left: 0; bottom: 100%;
    transform: translateY(-6px);
    max-width: min(60ch, 320px);
    white-space: pre-wrap;            /* переносим \n и длинные строки */
    background: var(--bg);
    color: var(--fg);
    border: 1px solid var(--rule);
    border-radius: 8px;
    padding: 8px 10px;
    box-shadow: 0 10px 24px rgba(0,0,0,.18);
    z-index: 40;
    pointer-events: none;
    font-size: 12px;
    line-height: 1.35;
}

.wikilink.is-ambiguous:hover::before{
    content: '';
    position: absolute;
    left: 10px; bottom: calc(100% + 1px);
    transform: translateY(-2px);
    border: 6px solid transparent;
    border-top-color: var(--bg);
    filter: drop-shadow(0 -1px 0 var(--rule));
    z-index: 41;
}

/* На узких экранах — центрируем, чтобы не обрезалось */
@media (max-width: 640px) {
    .wikilink.is-ambiguous:hover::after{
        left: 50%; transform: translate(-50%, -6px);
    }
    .wikilink.is-ambiguous:hover::before{
        left: 50%; transform: translate(-50%, -2px);
    }
}


/* Backlinks */
.backlinks .meta {
    margin-bottom: 8px;
}
.backlinks-list {
    list-style: none;
    padding: 0;
    margin: 0;
}
.backlinks-list li {
    margin: 6px 0;
}

.close-btn:focus-visible {
    outline: 2px solid var(--link);
    outline-offset: 2px;
    border-radius: 4px;
}

/* обёртка приложения — колонка: topbar + лента колонок */
.app-root {
    display: flex;
    flex-direction: column;
    height: 100%;
}

/* раньше у .app-shell было height:100%; заменим на гибкую высоту */
.app-shell {
    display: flex;
    flex-direction: row;
    /* height: 100%;  ⛔ убираем */
    flex: 1 1 auto;          /* ⬅️ пусть занимает оставшееся место */
    min-height: 0;           /* ⬅️ чтобы корректно работать с overflow */
    overflow-x: auto;
    overflow-y: hidden;
    gap: var(--gutter);
    padding: 16px;
}

/* ---- */

body {
    background: var(--bg);
    color: var(--fg);
}


/* Контейнер колонок — позиционируем, чтобы уходящая absolute оставалась на месте */
.app-shell{
    position: relative;
    display: flex;
    gap: var(--col-gap, 24px);
    overflow-x: auto;
    /* Иногда помогает от странных скачков браузерного «scroll anchoring» */
    overflow-anchor: none;
}

/* === TransitionGroup "col" === */

/* Вход (enter): мягко появиться сверху-вниз */
.col-enter-from { opacity: 0; transform: translateY(8px); }
.col-enter-to   { opacity: 1; transform: translateY(0); }
.col-enter-active { transition: opacity .22s ease, transform .22s ease; }

/* Выход (leave): не ломаем поток — вынимаем из flow на время анимации */
.col-leave-from { opacity: 1; transform: translateY(0); }
/* absolute = элемент остаётся в визуальном месте, пока соседи плавно сдвигаются */
.col-leave-active {
    position: absolute;
    /* Чтобы элемент не схлопнулся: фиксируем высоту/ширину по текущим значениям.
       Обычно колонка фиксированной ширины, но на всякий случай: */
    width: var(--col-width, auto);
    /* высоту браузер сохраняет автоматически по содержимому */
    transition: opacity .18s ease, transform .18s ease;
    z-index: 0;
}
.col-leave-to   { opacity: 0; transform: translateY(8px); }

/* Движение соседних колонок: Vue применяет translate — мы его анимируем */
.col-move { transition: transform .22s ease; }

/* Немного производительности */
.column { will-change: transform, opacity; }


